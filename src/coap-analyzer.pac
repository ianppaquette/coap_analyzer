# Generated by binpac_quickstart

refine flow coap_flow += {
	function proc_coap_message(msg: coap_pdu): bool
		%{//Check if there is a payload
        if (${msg.op_payload} == false){
                print("coap_empty")
                Bifevent::generate_coap_empty(connection()->zeek_analyzer(), connection()=>zeekanalyzer()_Conn(), # passes on all higher data point source/dest ports, IPs
                    ${msg.version},
                    ${msg.typ},
                    ${msg.code},
                    ${msg.token});
               
        }
        if (${msg.op_payload} == true){
                print("coap_payload")                
                Bifevent::generate_coap_payload(connection()->zeek_analyzer(), connection()=>zeekanalyzer()_Conn(), # passes on all higher data point source/dest ports, IPs
                    ${msg.version},
                    ${msg.typ},
                    ${msg.code},
                    ${msg.token}
                    ${msg.options},
                    ${msg.payload});
               
        }
	}
    return true;
%};

refine typeattr coap_pdu += &let {
	proc: bool = $context.flow.proc_coap_message(this);
};
